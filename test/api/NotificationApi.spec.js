/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.7.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenNucleusApi);
  }
}(this, function(expect, HydrogenNucleusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HydrogenNucleusApi.NotificationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotificationApi', function() {
    describe('createNotificationClientUsingPost', function() {
      it('should call createNotificationClientUsingPost successfully', function(done) {
        //uncomment below and update the code to test createNotificationClientUsingPost
        //instance.createNotificationClientUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNotificationSettingUsingPost', function() {
      it('should call createNotificationSettingUsingPost successfully', function(done) {
        //uncomment below and update the code to test createNotificationSettingUsingPost
        //instance.createNotificationSettingUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNotificationUsingPost', function() {
      it('should call createNotificationUsingPost successfully', function(done) {
        //uncomment below and update the code to test createNotificationUsingPost
        //instance.createNotificationUsingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotificationClientUsingDelete', function() {
      it('should call deleteNotificationClientUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteNotificationClientUsingDelete
        //instance.deleteNotificationClientUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotificationSettingUsingDelete', function() {
      it('should call deleteNotificationSettingUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteNotificationSettingUsingDelete
        //instance.deleteNotificationSettingUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNotificationUsingDelete', function() {
      it('should call deleteNotificationUsingDelete successfully', function(done) {
        //uncomment below and update the code to test deleteNotificationUsingDelete
        //instance.deleteNotificationUsingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationAllUsingGet', function() {
      it('should call getNotificationAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationAllUsingGet
        //instance.getNotificationAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationClientAllUsingGet', function() {
      it('should call getNotificationClientAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationClientAllUsingGet
        //instance.getNotificationClientAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationClientUsingGet', function() {
      it('should call getNotificationClientUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationClientUsingGet
        //instance.getNotificationClientUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationSettingAllUsingGet', function() {
      it('should call getNotificationSettingAllUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationSettingAllUsingGet
        //instance.getNotificationSettingAllUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationSettingUsingGet', function() {
      it('should call getNotificationSettingUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationSettingUsingGet
        //instance.getNotificationSettingUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationUsingGet', function() {
      it('should call getNotificationUsingGet successfully', function(done) {
        //uncomment below and update the code to test getNotificationUsingGet
        //instance.getNotificationUsingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationClientUsingPut', function() {
      it('should call updateNotificationClientUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateNotificationClientUsingPut
        //instance.updateNotificationClientUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationSettingUsingPut', function() {
      it('should call updateNotificationSettingUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateNotificationSettingUsingPut
        //instance.updateNotificationSettingUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationUsingPut', function() {
      it('should call updateNotificationUsingPut successfully', function(done) {
        //uncomment below and update the code to test updateNotificationUsingPut
        //instance.updateNotificationUsingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));

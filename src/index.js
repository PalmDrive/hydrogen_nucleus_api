/**
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.7.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Account', 'model/AccountAdvisorVO', 'model/AccountAllocationMapping', 'model/AccountClientsOverviewVO', 'model/AccountHoldingVO', 'model/AccountMap', 'model/AccountOverviewVO', 'model/AccountPermissionVO', 'model/AccountPortfolioRebalanceRequest', 'model/AccountStatus', 'model/AccountType', 'model/AccountVO', 'model/Accounting', 'model/AclClientPermissionVO', 'model/AdvisorOverviewVO', 'model/AggregateDataByCategoryForClientFromDbVO', 'model/AggregationAccount', 'model/AggregationAccountAggregateDataVO', 'model/AggregationAccountBalance', 'model/AggregationAccountBalanceAggregateDataVO', 'model/AggregationAccountDetailsAggregateDataVO', 'model/AggregationAccountHolding', 'model/AggregationAccountHoldingAggregateDataVO', 'model/AggregationAccountTransaction', 'model/AggregationAccountTransactionAggregateDataVO', 'model/AggregationAccountsMap', 'model/AggregationDataForClientByCategoryResponseVO', 'model/AggregationDataForClientParentResponseVO', 'model/Allocation', 'model/AllocationAggregatedVO', 'model/AllocationComposition', 'model/AllocationCompositionAggregatedVO', 'model/AllocationCompositionModelHoldingsVO', 'model/AllocationNodeMap', 'model/AllocationVO', 'model/Answer', 'model/AnswerMap', 'model/Application', 'model/AuditLog', 'model/AvailableDateDoubleVO', 'model/BankCredit', 'model/BankLink', 'model/BankLinkMap', 'model/Benchmark', 'model/BenchmarkComposition', 'model/Budget', 'model/BudgetAggregationAccount', 'model/BudgetObject', 'model/BulkTransaction', 'model/BulkTransactionVO', 'model/Campaign', 'model/CampaignData', 'model/CampaignPlan', 'model/CampaignPlanRate', 'model/Card', 'model/CardAddress', 'model/CardProgram', 'model/Cash', 'model/CategoriesMap', 'model/ChatInfo', 'model/Client', 'model/ClientAccountAdvisorVO', 'model/ClientAccountMapping', 'model/ClientAccountVO', 'model/ClientAddress', 'model/ClientAdvisorOverviewVO', 'model/ClientAnalyticsHistory', 'model/ClientAnalyticsResponse', 'model/ClientAnalyticsTenants', 'model/ClientAssetsAdvisorVO', 'model/ClientCampaignMapping', 'model/ClientHydro', 'model/ClientResponse', 'model/ClientStatus', 'model/ClientViewGoalData', 'model/Consultation', 'model/Country', 'model/Currency', 'model/Customer', 'model/CustomerAddress', 'model/CustomerRevenue', 'model/DailyDeposit', 'model/DailyWithdrawal', 'model/DateDoubleVO', 'model/DecisionTree', 'model/DecisionTreeCO', 'model/DecisionTreeResultVO', 'model/DepositAccountVO', 'model/DepositVO', 'model/Document', 'model/Employment', 'model/ExternalAccountTransfer', 'model/FAQKeyword', 'model/Faq', 'model/Feature', 'model/FeatureTrack', 'model/FinancialOffer', 'model/Funding', 'model/FundingRequestMap', 'model/Goal', 'model/GoalAccountMapping', 'model/GoalTrack', 'model/GoalTrackAccounts', 'model/InsuranceCoverage', 'model/InsuranceCoverageMap', 'model/InsuranceDiscount', 'model/InsuranceDiscountMap', 'model/InsuranceQuote', 'model/Investment', 'model/Invoice', 'model/InvoicePayment', 'model/JsonNode', 'model/Location', 'model/MerchantsMap', 'model/Model', 'model/ModelAssetSize', 'model/ModelComment', 'model/ModelHolding', 'model/ModelHoldingAgg', 'model/ModelHoldingVO', 'model/ModelTransaction', 'model/Node', 'model/NodeRelationship', 'model/Notification', 'model/NotificationClient', 'model/NotificationSetting', 'model/Order', 'model/OrderBulk', 'model/OrderReconcileRequest', 'model/OrderReconcileReturnObject', 'model/OrderStatus', 'model/OrderTrack', 'model/OrderVoClone', 'model/Overflow', 'model/OverflowBankLinkMap', 'model/OverflowSettings', 'model/PageAccount', 'model/PageAccountAllocationMapping', 'model/PageAccountPermissionVO', 'model/PageAccountStatus', 'model/PageAccountType', 'model/PageAccounting', 'model/PageAggregationAccount', 'model/PageAggregationAccountBalance', 'model/PageAggregationAccountHolding', 'model/PageAggregationAccountTransaction', 'model/PageAllocation', 'model/PageAllocationComposition', 'model/PageAnswer', 'model/PageApplication', 'model/PageAuditLog', 'model/PageBankLink', 'model/PageBenchmark', 'model/PageBudget', 'model/PageCampaign', 'model/PageCampaignData', 'model/PageCampaignPlan', 'model/PageCard', 'model/PageCardProgram', 'model/PageChatInfo', 'model/PageClient', 'model/PageClientCampaignMapping', 'model/PageClientHydro', 'model/PageClientResponse', 'model/PageClientStatus', 'model/PageConsultation', 'model/PageCustomer', 'model/PageCustomerRevenue', 'model/PageDailyDeposit', 'model/PageDailyWithdrawal', 'model/PageDecisionTree', 'model/PageDocument', 'model/PageExternalAccountTransfer', 'model/PageFaq', 'model/PageFeature', 'model/PageFeatureTrack', 'model/PageFinancialOffer', 'model/PageFunding', 'model/PageGoal', 'model/PageGoalTrack', 'model/PageInsuranceCoverage', 'model/PageInsuranceDiscount', 'model/PageInsuranceQuote', 'model/PageInvoice', 'model/PageInvoicePayment', 'model/PageModel', 'model/PageModelAssetSize', 'model/PageModelComment', 'model/PageModelHolding', 'model/PageModelTransaction', 'model/PageNode', 'model/PageNodeRelationship', 'model/PageNotification', 'model/PageNotificationClient', 'model/PageNotificationSetting', 'model/PageOrder', 'model/PageOrderBulk', 'model/PageOrderStatus', 'model/PageOrderTrack', 'model/PageOverflow', 'model/PageOverflowSettings', 'model/PagePortfolio', 'model/PagePortfolioAssetSizeLog', 'model/PagePortfolioComment', 'model/PagePortfolioGoal', 'model/PagePortfolioHoldingLog', 'model/PagePortfolioTransaction', 'model/PageQuestion', 'model/PageQuestionnaire', 'model/PageRiskProfile', 'model/PageRoundup', 'model/PageRoundupSettings', 'model/PageSale', 'model/PageScore', 'model/PageSecurity', 'model/PageSecurityExclusion', 'model/PageSecurityPrice', 'model/PageStage', 'model/PageSupportTicket', 'model/PageSupportTicketComment', 'model/PageTransactionCode', 'model/PageVAccountAssetSize', 'model/PageWebhook', 'model/PermissionVO', 'model/Portfolio', 'model/PortfolioAggregatedVO', 'model/PortfolioAssetSize', 'model/PortfolioAssetSizeLog', 'model/PortfolioComment', 'model/PortfolioGoal', 'model/PortfolioGoalMap', 'model/PortfolioHolding', 'model/PortfolioHoldingAgg', 'model/PortfolioHoldingLog', 'model/PortfolioTransaction', 'model/Question', 'model/Questionnaire', 'model/RiskProfile', 'model/Roundup', 'model/RoundupCO', 'model/RoundupSettings', 'model/Sale', 'model/Score', 'model/SecuritiesComposition', 'model/SecuritiesCountry', 'model/Security', 'model/SecurityCompositionVO', 'model/SecurityCountryVO', 'model/SecurityDetailVO', 'model/SecurityExclusion', 'model/SecurityPrice', 'model/Sort', 'model/Stage', 'model/State', 'model/StatisticResourceVO', 'model/SupportTicket', 'model/SupportTicketComment', 'model/SupportTicketDocument', 'model/TokenDateRequest', 'model/TransactionCode', 'model/VAccountAssetSize', 'model/VAccountVO', 'model/VClientGoalViewData', 'model/VPortfolioVO', 'model/Webhook', 'model/WithdrawalAccountVO', 'model/WithdrawalVO', 'api/AccountApi', 'api/AccountingApi', 'api/AggregationAccountApi', 'api/AllocationApi', 'api/ApplicationApi', 'api/AuditLogApi', 'api/BenchmarkApi', 'api/BudgetApi', 'api/BulkApi', 'api/CardApi', 'api/ClientApi', 'api/CustomerApi', 'api/DecisionTreeApi', 'api/DocumentApi', 'api/FAQApi', 'api/FeatureApi', 'api/FinancialOfferApi', 'api/FundingApi', 'api/GoalApi', 'api/InsuranceApi', 'api/InvoiceApi', 'api/MarketingApi', 'api/ModelApi', 'api/NotificationApi', 'api/OrderApi', 'api/OverflowApi', 'api/PerformanceApi', 'api/PortfolioApi', 'api/QuestionnaireApi', 'api/ResourceApi', 'api/RiskProfileApi', 'api/RoundupApi', 'api/ScoreApi', 'api/SecuritiesApi', 'api/SupportApi', 'api/UtilsApi', 'api/WebhookApi', 'api/AuthApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Account'), require('./model/AccountAdvisorVO'), require('./model/AccountAllocationMapping'), require('./model/AccountClientsOverviewVO'), require('./model/AccountHoldingVO'), require('./model/AccountMap'), require('./model/AccountOverviewVO'), require('./model/AccountPermissionVO'), require('./model/AccountPortfolioRebalanceRequest'), require('./model/AccountStatus'), require('./model/AccountType'), require('./model/AccountVO'), require('./model/Accounting'), require('./model/AclClientPermissionVO'), require('./model/AdvisorOverviewVO'), require('./model/AggregateDataByCategoryForClientFromDbVO'), require('./model/AggregationAccount'), require('./model/AggregationAccountAggregateDataVO'), require('./model/AggregationAccountBalance'), require('./model/AggregationAccountBalanceAggregateDataVO'), require('./model/AggregationAccountDetailsAggregateDataVO'), require('./model/AggregationAccountHolding'), require('./model/AggregationAccountHoldingAggregateDataVO'), require('./model/AggregationAccountTransaction'), require('./model/AggregationAccountTransactionAggregateDataVO'), require('./model/AggregationAccountsMap'), require('./model/AggregationDataForClientByCategoryResponseVO'), require('./model/AggregationDataForClientParentResponseVO'), require('./model/Allocation'), require('./model/AllocationAggregatedVO'), require('./model/AllocationComposition'), require('./model/AllocationCompositionAggregatedVO'), require('./model/AllocationCompositionModelHoldingsVO'), require('./model/AllocationNodeMap'), require('./model/AllocationVO'), require('./model/Answer'), require('./model/AnswerMap'), require('./model/Application'), require('./model/AuditLog'), require('./model/AvailableDateDoubleVO'), require('./model/BankCredit'), require('./model/BankLink'), require('./model/BankLinkMap'), require('./model/Benchmark'), require('./model/BenchmarkComposition'), require('./model/Budget'), require('./model/BudgetAggregationAccount'), require('./model/BudgetObject'), require('./model/BulkTransaction'), require('./model/BulkTransactionVO'), require('./model/Campaign'), require('./model/CampaignData'), require('./model/CampaignPlan'), require('./model/CampaignPlanRate'), require('./model/Card'), require('./model/CardAddress'), require('./model/CardProgram'), require('./model/Cash'), require('./model/CategoriesMap'), require('./model/ChatInfo'), require('./model/Client'), require('./model/ClientAccountAdvisorVO'), require('./model/ClientAccountMapping'), require('./model/ClientAccountVO'), require('./model/ClientAddress'), require('./model/ClientAdvisorOverviewVO'), require('./model/ClientAnalyticsHistory'), require('./model/ClientAnalyticsResponse'), require('./model/ClientAnalyticsTenants'), require('./model/ClientAssetsAdvisorVO'), require('./model/ClientCampaignMapping'), require('./model/ClientHydro'), require('./model/ClientResponse'), require('./model/ClientStatus'), require('./model/ClientViewGoalData'), require('./model/Consultation'), require('./model/Country'), require('./model/Currency'), require('./model/Customer'), require('./model/CustomerAddress'), require('./model/CustomerRevenue'), require('./model/DailyDeposit'), require('./model/DailyWithdrawal'), require('./model/DateDoubleVO'), require('./model/DecisionTree'), require('./model/DecisionTreeCO'), require('./model/DecisionTreeResultVO'), require('./model/DepositAccountVO'), require('./model/DepositVO'), require('./model/Document'), require('./model/Employment'), require('./model/ExternalAccountTransfer'), require('./model/FAQKeyword'), require('./model/Faq'), require('./model/Feature'), require('./model/FeatureTrack'), require('./model/FinancialOffer'), require('./model/Funding'), require('./model/FundingRequestMap'), require('./model/Goal'), require('./model/GoalAccountMapping'), require('./model/GoalTrack'), require('./model/GoalTrackAccounts'), require('./model/InsuranceCoverage'), require('./model/InsuranceCoverageMap'), require('./model/InsuranceDiscount'), require('./model/InsuranceDiscountMap'), require('./model/InsuranceQuote'), require('./model/Investment'), require('./model/Invoice'), require('./model/InvoicePayment'), require('./model/JsonNode'), require('./model/Location'), require('./model/MerchantsMap'), require('./model/Model'), require('./model/ModelAssetSize'), require('./model/ModelComment'), require('./model/ModelHolding'), require('./model/ModelHoldingAgg'), require('./model/ModelHoldingVO'), require('./model/ModelTransaction'), require('./model/Node'), require('./model/NodeRelationship'), require('./model/Notification'), require('./model/NotificationClient'), require('./model/NotificationSetting'), require('./model/Order'), require('./model/OrderBulk'), require('./model/OrderReconcileRequest'), require('./model/OrderReconcileReturnObject'), require('./model/OrderStatus'), require('./model/OrderTrack'), require('./model/OrderVoClone'), require('./model/Overflow'), require('./model/OverflowBankLinkMap'), require('./model/OverflowSettings'), require('./model/PageAccount'), require('./model/PageAccountAllocationMapping'), require('./model/PageAccountPermissionVO'), require('./model/PageAccountStatus'), require('./model/PageAccountType'), require('./model/PageAccounting'), require('./model/PageAggregationAccount'), require('./model/PageAggregationAccountBalance'), require('./model/PageAggregationAccountHolding'), require('./model/PageAggregationAccountTransaction'), require('./model/PageAllocation'), require('./model/PageAllocationComposition'), require('./model/PageAnswer'), require('./model/PageApplication'), require('./model/PageAuditLog'), require('./model/PageBankLink'), require('./model/PageBenchmark'), require('./model/PageBudget'), require('./model/PageCampaign'), require('./model/PageCampaignData'), require('./model/PageCampaignPlan'), require('./model/PageCard'), require('./model/PageCardProgram'), require('./model/PageChatInfo'), require('./model/PageClient'), require('./model/PageClientCampaignMapping'), require('./model/PageClientHydro'), require('./model/PageClientResponse'), require('./model/PageClientStatus'), require('./model/PageConsultation'), require('./model/PageCustomer'), require('./model/PageCustomerRevenue'), require('./model/PageDailyDeposit'), require('./model/PageDailyWithdrawal'), require('./model/PageDecisionTree'), require('./model/PageDocument'), require('./model/PageExternalAccountTransfer'), require('./model/PageFaq'), require('./model/PageFeature'), require('./model/PageFeatureTrack'), require('./model/PageFinancialOffer'), require('./model/PageFunding'), require('./model/PageGoal'), require('./model/PageGoalTrack'), require('./model/PageInsuranceCoverage'), require('./model/PageInsuranceDiscount'), require('./model/PageInsuranceQuote'), require('./model/PageInvoice'), require('./model/PageInvoicePayment'), require('./model/PageModel'), require('./model/PageModelAssetSize'), require('./model/PageModelComment'), require('./model/PageModelHolding'), require('./model/PageModelTransaction'), require('./model/PageNode'), require('./model/PageNodeRelationship'), require('./model/PageNotification'), require('./model/PageNotificationClient'), require('./model/PageNotificationSetting'), require('./model/PageOrder'), require('./model/PageOrderBulk'), require('./model/PageOrderStatus'), require('./model/PageOrderTrack'), require('./model/PageOverflow'), require('./model/PageOverflowSettings'), require('./model/PagePortfolio'), require('./model/PagePortfolioAssetSizeLog'), require('./model/PagePortfolioComment'), require('./model/PagePortfolioGoal'), require('./model/PagePortfolioHoldingLog'), require('./model/PagePortfolioTransaction'), require('./model/PageQuestion'), require('./model/PageQuestionnaire'), require('./model/PageRiskProfile'), require('./model/PageRoundup'), require('./model/PageRoundupSettings'), require('./model/PageSale'), require('./model/PageScore'), require('./model/PageSecurity'), require('./model/PageSecurityExclusion'), require('./model/PageSecurityPrice'), require('./model/PageStage'), require('./model/PageSupportTicket'), require('./model/PageSupportTicketComment'), require('./model/PageTransactionCode'), require('./model/PageVAccountAssetSize'), require('./model/PageWebhook'), require('./model/PermissionVO'), require('./model/Portfolio'), require('./model/PortfolioAggregatedVO'), require('./model/PortfolioAssetSize'), require('./model/PortfolioAssetSizeLog'), require('./model/PortfolioComment'), require('./model/PortfolioGoal'), require('./model/PortfolioGoalMap'), require('./model/PortfolioHolding'), require('./model/PortfolioHoldingAgg'), require('./model/PortfolioHoldingLog'), require('./model/PortfolioTransaction'), require('./model/Question'), require('./model/Questionnaire'), require('./model/RiskProfile'), require('./model/Roundup'), require('./model/RoundupCO'), require('./model/RoundupSettings'), require('./model/Sale'), require('./model/Score'), require('./model/SecuritiesComposition'), require('./model/SecuritiesCountry'), require('./model/Security'), require('./model/SecurityCompositionVO'), require('./model/SecurityCountryVO'), require('./model/SecurityDetailVO'), require('./model/SecurityExclusion'), require('./model/SecurityPrice'), require('./model/Sort'), require('./model/Stage'), require('./model/State'), require('./model/StatisticResourceVO'), require('./model/SupportTicket'), require('./model/SupportTicketComment'), require('./model/SupportTicketDocument'), require('./model/TokenDateRequest'), require('./model/TransactionCode'), require('./model/VAccountAssetSize'), require('./model/VAccountVO'), require('./model/VClientGoalViewData'), require('./model/VPortfolioVO'), require('./model/Webhook'), require('./model/WithdrawalAccountVO'), require('./model/WithdrawalVO'), require('./api/AccountApi'), require('./api/AccountingApi'), require('./api/AggregationAccountApi'), require('./api/AllocationApi'), require('./api/ApplicationApi'), require('./api/AuditLogApi'), require('./api/BenchmarkApi'), require('./api/BudgetApi'), require('./api/BulkApi'), require('./api/CardApi'), require('./api/ClientApi'), require('./api/CustomerApi'), require('./api/DecisionTreeApi'), require('./api/DocumentApi'), require('./api/FAQApi'), require('./api/FeatureApi'), require('./api/FinancialOfferApi'), require('./api/FundingApi'), require('./api/GoalApi'), require('./api/InsuranceApi'), require('./api/InvoiceApi'), require('./api/MarketingApi'), require('./api/ModelApi'), require('./api/NotificationApi'), require('./api/OrderApi'), require('./api/OverflowApi'), require('./api/PerformanceApi'), require('./api/PortfolioApi'), require('./api/QuestionnaireApi'), require('./api/ResourceApi'), require('./api/RiskProfileApi'), require('./api/RoundupApi'), require('./api/ScoreApi'), require('./api/SecuritiesApi'), require('./api/SupportApi'), require('./api/UtilsApi'), require('./api/WebhookApi'), require('./api/AuthApi') );
  }
}(function(ApiClient, Account, AccountAdvisorVO, AccountAllocationMapping, AccountClientsOverviewVO, AccountHoldingVO, AccountMap, AccountOverviewVO, AccountPermissionVO, AccountPortfolioRebalanceRequest, AccountStatus, AccountType, AccountVO, Accounting, AclClientPermissionVO, AdvisorOverviewVO, AggregateDataByCategoryForClientFromDbVO, AggregationAccount, AggregationAccountAggregateDataVO, AggregationAccountBalance, AggregationAccountBalanceAggregateDataVO, AggregationAccountDetailsAggregateDataVO, AggregationAccountHolding, AggregationAccountHoldingAggregateDataVO, AggregationAccountTransaction, AggregationAccountTransactionAggregateDataVO, AggregationAccountsMap, AggregationDataForClientByCategoryResponseVO, AggregationDataForClientParentResponseVO, Allocation, AllocationAggregatedVO, AllocationComposition, AllocationCompositionAggregatedVO, AllocationCompositionModelHoldingsVO, AllocationNodeMap, AllocationVO, Answer, AnswerMap, Application, AuditLog, AvailableDateDoubleVO, BankCredit, BankLink, BankLinkMap, Benchmark, BenchmarkComposition, Budget, BudgetAggregationAccount, BudgetObject, BulkTransaction, BulkTransactionVO, Campaign, CampaignData, CampaignPlan, CampaignPlanRate, Card, CardAddress, CardProgram, Cash, CategoriesMap, ChatInfo, Client, ClientAccountAdvisorVO, ClientAccountMapping, ClientAccountVO, ClientAddress, ClientAdvisorOverviewVO, ClientAnalyticsHistory, ClientAnalyticsResponse, ClientAnalyticsTenants, ClientAssetsAdvisorVO, ClientCampaignMapping, ClientHydro, ClientResponse, ClientStatus, ClientViewGoalData, Consultation, Country, Currency, Customer, CustomerAddress, CustomerRevenue, DailyDeposit, DailyWithdrawal, DateDoubleVO, DecisionTree, DecisionTreeCO, DecisionTreeResultVO, DepositAccountVO, DepositVO, Document, Employment, ExternalAccountTransfer, FAQKeyword, Faq, Feature, FeatureTrack, FinancialOffer, Funding, FundingRequestMap, Goal, GoalAccountMapping, GoalTrack, GoalTrackAccounts, InsuranceCoverage, InsuranceCoverageMap, InsuranceDiscount, InsuranceDiscountMap, InsuranceQuote, Investment, Invoice, InvoicePayment, JsonNode, Location, MerchantsMap, Model, ModelAssetSize, ModelComment, ModelHolding, ModelHoldingAgg, ModelHoldingVO, ModelTransaction, Node, NodeRelationship, Notification, NotificationClient, NotificationSetting, Order, OrderBulk, OrderReconcileRequest, OrderReconcileReturnObject, OrderStatus, OrderTrack, OrderVoClone, Overflow, OverflowBankLinkMap, OverflowSettings, PageAccount, PageAccountAllocationMapping, PageAccountPermissionVO, PageAccountStatus, PageAccountType, PageAccounting, PageAggregationAccount, PageAggregationAccountBalance, PageAggregationAccountHolding, PageAggregationAccountTransaction, PageAllocation, PageAllocationComposition, PageAnswer, PageApplication, PageAuditLog, PageBankLink, PageBenchmark, PageBudget, PageCampaign, PageCampaignData, PageCampaignPlan, PageCard, PageCardProgram, PageChatInfo, PageClient, PageClientCampaignMapping, PageClientHydro, PageClientResponse, PageClientStatus, PageConsultation, PageCustomer, PageCustomerRevenue, PageDailyDeposit, PageDailyWithdrawal, PageDecisionTree, PageDocument, PageExternalAccountTransfer, PageFaq, PageFeature, PageFeatureTrack, PageFinancialOffer, PageFunding, PageGoal, PageGoalTrack, PageInsuranceCoverage, PageInsuranceDiscount, PageInsuranceQuote, PageInvoice, PageInvoicePayment, PageModel, PageModelAssetSize, PageModelComment, PageModelHolding, PageModelTransaction, PageNode, PageNodeRelationship, PageNotification, PageNotificationClient, PageNotificationSetting, PageOrder, PageOrderBulk, PageOrderStatus, PageOrderTrack, PageOverflow, PageOverflowSettings, PagePortfolio, PagePortfolioAssetSizeLog, PagePortfolioComment, PagePortfolioGoal, PagePortfolioHoldingLog, PagePortfolioTransaction, PageQuestion, PageQuestionnaire, PageRiskProfile, PageRoundup, PageRoundupSettings, PageSale, PageScore, PageSecurity, PageSecurityExclusion, PageSecurityPrice, PageStage, PageSupportTicket, PageSupportTicketComment, PageTransactionCode, PageVAccountAssetSize, PageWebhook, PermissionVO, Portfolio, PortfolioAggregatedVO, PortfolioAssetSize, PortfolioAssetSizeLog, PortfolioComment, PortfolioGoal, PortfolioGoalMap, PortfolioHolding, PortfolioHoldingAgg, PortfolioHoldingLog, PortfolioTransaction, Question, Questionnaire, RiskProfile, Roundup, RoundupCO, RoundupSettings, Sale, Score, SecuritiesComposition, SecuritiesCountry, Security, SecurityCompositionVO, SecurityCountryVO, SecurityDetailVO, SecurityExclusion, SecurityPrice, Sort, Stage, State, StatisticResourceVO, SupportTicket, SupportTicketComment, SupportTicketDocument, TokenDateRequest, TransactionCode, VAccountAssetSize, VAccountVO, VClientGoalViewData, VPortfolioVO, Webhook, WithdrawalAccountVO, WithdrawalVO, AccountApi, AccountingApi, AggregationAccountApi, AllocationApi, ApplicationApi, AuditLogApi, BenchmarkApi, BudgetApi, BulkApi, CardApi, ClientApi, CustomerApi, DecisionTreeApi, DocumentApi, FAQApi, FeatureApi, FinancialOfferApi, FundingApi, GoalApi, InsuranceApi, InvoiceApi, MarketingApi, ModelApi, NotificationApi, OrderApi, OverflowApi, PerformanceApi, PortfolioApi, QuestionnaireApi, ResourceApi, RiskProfileApi, RoundupApi, ScoreApi, SecuritiesApi, SupportApi, UtilsApi, WebhookApi, AuthApi) {
  'use strict';

  /**
   * The_hydrogen_nucleus_api.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var HydrogenNucleusApi = require('index'); // See note below*.
   * var xxxSvc = new HydrogenNucleusApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new HydrogenNucleusApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new HydrogenNucleusApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new HydrogenNucleusApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.7.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The AccountAdvisorVO model constructor.
     * @property {module:model/AccountAdvisorVO}
     */
    AccountAdvisorVO: AccountAdvisorVO,
    /**
     * The AccountAllocationMapping model constructor.
     * @property {module:model/AccountAllocationMapping}
     */
    AccountAllocationMapping: AccountAllocationMapping,
    /**
     * The AccountClientsOverviewVO model constructor.
     * @property {module:model/AccountClientsOverviewVO}
     */
    AccountClientsOverviewVO: AccountClientsOverviewVO,
    /**
     * The AccountHoldingVO model constructor.
     * @property {module:model/AccountHoldingVO}
     */
    AccountHoldingVO: AccountHoldingVO,
    /**
     * The AccountMap model constructor.
     * @property {module:model/AccountMap}
     */
    AccountMap: AccountMap,
    /**
     * The AccountOverviewVO model constructor.
     * @property {module:model/AccountOverviewVO}
     */
    AccountOverviewVO: AccountOverviewVO,
    /**
     * The AccountPermissionVO model constructor.
     * @property {module:model/AccountPermissionVO}
     */
    AccountPermissionVO: AccountPermissionVO,
    /**
     * The AccountPortfolioRebalanceRequest model constructor.
     * @property {module:model/AccountPortfolioRebalanceRequest}
     */
    AccountPortfolioRebalanceRequest: AccountPortfolioRebalanceRequest,
    /**
     * The AccountStatus model constructor.
     * @property {module:model/AccountStatus}
     */
    AccountStatus: AccountStatus,
    /**
     * The AccountType model constructor.
     * @property {module:model/AccountType}
     */
    AccountType: AccountType,
    /**
     * The AccountVO model constructor.
     * @property {module:model/AccountVO}
     */
    AccountVO: AccountVO,
    /**
     * The Accounting model constructor.
     * @property {module:model/Accounting}
     */
    Accounting: Accounting,
    /**
     * The AclClientPermissionVO model constructor.
     * @property {module:model/AclClientPermissionVO}
     */
    AclClientPermissionVO: AclClientPermissionVO,
    /**
     * The AdvisorOverviewVO model constructor.
     * @property {module:model/AdvisorOverviewVO}
     */
    AdvisorOverviewVO: AdvisorOverviewVO,
    /**
     * The AggregateDataByCategoryForClientFromDbVO model constructor.
     * @property {module:model/AggregateDataByCategoryForClientFromDbVO}
     */
    AggregateDataByCategoryForClientFromDbVO: AggregateDataByCategoryForClientFromDbVO,
    /**
     * The AggregationAccount model constructor.
     * @property {module:model/AggregationAccount}
     */
    AggregationAccount: AggregationAccount,
    /**
     * The AggregationAccountAggregateDataVO model constructor.
     * @property {module:model/AggregationAccountAggregateDataVO}
     */
    AggregationAccountAggregateDataVO: AggregationAccountAggregateDataVO,
    /**
     * The AggregationAccountBalance model constructor.
     * @property {module:model/AggregationAccountBalance}
     */
    AggregationAccountBalance: AggregationAccountBalance,
    /**
     * The AggregationAccountBalanceAggregateDataVO model constructor.
     * @property {module:model/AggregationAccountBalanceAggregateDataVO}
     */
    AggregationAccountBalanceAggregateDataVO: AggregationAccountBalanceAggregateDataVO,
    /**
     * The AggregationAccountDetailsAggregateDataVO model constructor.
     * @property {module:model/AggregationAccountDetailsAggregateDataVO}
     */
    AggregationAccountDetailsAggregateDataVO: AggregationAccountDetailsAggregateDataVO,
    /**
     * The AggregationAccountHolding model constructor.
     * @property {module:model/AggregationAccountHolding}
     */
    AggregationAccountHolding: AggregationAccountHolding,
    /**
     * The AggregationAccountHoldingAggregateDataVO model constructor.
     * @property {module:model/AggregationAccountHoldingAggregateDataVO}
     */
    AggregationAccountHoldingAggregateDataVO: AggregationAccountHoldingAggregateDataVO,
    /**
     * The AggregationAccountTransaction model constructor.
     * @property {module:model/AggregationAccountTransaction}
     */
    AggregationAccountTransaction: AggregationAccountTransaction,
    /**
     * The AggregationAccountTransactionAggregateDataVO model constructor.
     * @property {module:model/AggregationAccountTransactionAggregateDataVO}
     */
    AggregationAccountTransactionAggregateDataVO: AggregationAccountTransactionAggregateDataVO,
    /**
     * The AggregationAccountsMap model constructor.
     * @property {module:model/AggregationAccountsMap}
     */
    AggregationAccountsMap: AggregationAccountsMap,
    /**
     * The AggregationDataForClientByCategoryResponseVO model constructor.
     * @property {module:model/AggregationDataForClientByCategoryResponseVO}
     */
    AggregationDataForClientByCategoryResponseVO: AggregationDataForClientByCategoryResponseVO,
    /**
     * The AggregationDataForClientParentResponseVO model constructor.
     * @property {module:model/AggregationDataForClientParentResponseVO}
     */
    AggregationDataForClientParentResponseVO: AggregationDataForClientParentResponseVO,
    /**
     * The Allocation model constructor.
     * @property {module:model/Allocation}
     */
    Allocation: Allocation,
    /**
     * The AllocationAggregatedVO model constructor.
     * @property {module:model/AllocationAggregatedVO}
     */
    AllocationAggregatedVO: AllocationAggregatedVO,
    /**
     * The AllocationComposition model constructor.
     * @property {module:model/AllocationComposition}
     */
    AllocationComposition: AllocationComposition,
    /**
     * The AllocationCompositionAggregatedVO model constructor.
     * @property {module:model/AllocationCompositionAggregatedVO}
     */
    AllocationCompositionAggregatedVO: AllocationCompositionAggregatedVO,
    /**
     * The AllocationCompositionModelHoldingsVO model constructor.
     * @property {module:model/AllocationCompositionModelHoldingsVO}
     */
    AllocationCompositionModelHoldingsVO: AllocationCompositionModelHoldingsVO,
    /**
     * The AllocationNodeMap model constructor.
     * @property {module:model/AllocationNodeMap}
     */
    AllocationNodeMap: AllocationNodeMap,
    /**
     * The AllocationVO model constructor.
     * @property {module:model/AllocationVO}
     */
    AllocationVO: AllocationVO,
    /**
     * The Answer model constructor.
     * @property {module:model/Answer}
     */
    Answer: Answer,
    /**
     * The AnswerMap model constructor.
     * @property {module:model/AnswerMap}
     */
    AnswerMap: AnswerMap,
    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application: Application,
    /**
     * The AuditLog model constructor.
     * @property {module:model/AuditLog}
     */
    AuditLog: AuditLog,
    /**
     * The AvailableDateDoubleVO model constructor.
     * @property {module:model/AvailableDateDoubleVO}
     */
    AvailableDateDoubleVO: AvailableDateDoubleVO,
    /**
     * The BankCredit model constructor.
     * @property {module:model/BankCredit}
     */
    BankCredit: BankCredit,
    /**
     * The BankLink model constructor.
     * @property {module:model/BankLink}
     */
    BankLink: BankLink,
    /**
     * The BankLinkMap model constructor.
     * @property {module:model/BankLinkMap}
     */
    BankLinkMap: BankLinkMap,
    /**
     * The Benchmark model constructor.
     * @property {module:model/Benchmark}
     */
    Benchmark: Benchmark,
    /**
     * The BenchmarkComposition model constructor.
     * @property {module:model/BenchmarkComposition}
     */
    BenchmarkComposition: BenchmarkComposition,
    /**
     * The Budget model constructor.
     * @property {module:model/Budget}
     */
    Budget: Budget,
    /**
     * The BudgetAggregationAccount model constructor.
     * @property {module:model/BudgetAggregationAccount}
     */
    BudgetAggregationAccount: BudgetAggregationAccount,
    /**
     * The BudgetObject model constructor.
     * @property {module:model/BudgetObject}
     */
    BudgetObject: BudgetObject,
    /**
     * The BulkTransaction model constructor.
     * @property {module:model/BulkTransaction}
     */
    BulkTransaction: BulkTransaction,
    /**
     * The BulkTransactionVO model constructor.
     * @property {module:model/BulkTransactionVO}
     */
    BulkTransactionVO: BulkTransactionVO,
    /**
     * The Campaign model constructor.
     * @property {module:model/Campaign}
     */
    Campaign: Campaign,
    /**
     * The CampaignData model constructor.
     * @property {module:model/CampaignData}
     */
    CampaignData: CampaignData,
    /**
     * The CampaignPlan model constructor.
     * @property {module:model/CampaignPlan}
     */
    CampaignPlan: CampaignPlan,
    /**
     * The CampaignPlanRate model constructor.
     * @property {module:model/CampaignPlanRate}
     */
    CampaignPlanRate: CampaignPlanRate,
    /**
     * The Card model constructor.
     * @property {module:model/Card}
     */
    Card: Card,
    /**
     * The CardAddress model constructor.
     * @property {module:model/CardAddress}
     */
    CardAddress: CardAddress,
    /**
     * The CardProgram model constructor.
     * @property {module:model/CardProgram}
     */
    CardProgram: CardProgram,
    /**
     * The Cash model constructor.
     * @property {module:model/Cash}
     */
    Cash: Cash,
    /**
     * The CategoriesMap model constructor.
     * @property {module:model/CategoriesMap}
     */
    CategoriesMap: CategoriesMap,
    /**
     * The ChatInfo model constructor.
     * @property {module:model/ChatInfo}
     */
    ChatInfo: ChatInfo,
    /**
     * The Client model constructor.
     * @property {module:model/Client}
     */
    Client: Client,
    /**
     * The ClientAccountAdvisorVO model constructor.
     * @property {module:model/ClientAccountAdvisorVO}
     */
    ClientAccountAdvisorVO: ClientAccountAdvisorVO,
    /**
     * The ClientAccountMapping model constructor.
     * @property {module:model/ClientAccountMapping}
     */
    ClientAccountMapping: ClientAccountMapping,
    /**
     * The ClientAccountVO model constructor.
     * @property {module:model/ClientAccountVO}
     */
    ClientAccountVO: ClientAccountVO,
    /**
     * The ClientAddress model constructor.
     * @property {module:model/ClientAddress}
     */
    ClientAddress: ClientAddress,
    /**
     * The ClientAdvisorOverviewVO model constructor.
     * @property {module:model/ClientAdvisorOverviewVO}
     */
    ClientAdvisorOverviewVO: ClientAdvisorOverviewVO,
    /**
     * The ClientAnalyticsHistory model constructor.
     * @property {module:model/ClientAnalyticsHistory}
     */
    ClientAnalyticsHistory: ClientAnalyticsHistory,
    /**
     * The ClientAnalyticsResponse model constructor.
     * @property {module:model/ClientAnalyticsResponse}
     */
    ClientAnalyticsResponse: ClientAnalyticsResponse,
    /**
     * The ClientAnalyticsTenants model constructor.
     * @property {module:model/ClientAnalyticsTenants}
     */
    ClientAnalyticsTenants: ClientAnalyticsTenants,
    /**
     * The ClientAssetsAdvisorVO model constructor.
     * @property {module:model/ClientAssetsAdvisorVO}
     */
    ClientAssetsAdvisorVO: ClientAssetsAdvisorVO,
    /**
     * The ClientCampaignMapping model constructor.
     * @property {module:model/ClientCampaignMapping}
     */
    ClientCampaignMapping: ClientCampaignMapping,
    /**
     * The ClientHydro model constructor.
     * @property {module:model/ClientHydro}
     */
    ClientHydro: ClientHydro,
    /**
     * The ClientResponse model constructor.
     * @property {module:model/ClientResponse}
     */
    ClientResponse: ClientResponse,
    /**
     * The ClientStatus model constructor.
     * @property {module:model/ClientStatus}
     */
    ClientStatus: ClientStatus,
    /**
     * The ClientViewGoalData model constructor.
     * @property {module:model/ClientViewGoalData}
     */
    ClientViewGoalData: ClientViewGoalData,
    /**
     * The Consultation model constructor.
     * @property {module:model/Consultation}
     */
    Consultation: Consultation,
    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country: Country,
    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency: Currency,
    /**
     * The Customer model constructor.
     * @property {module:model/Customer}
     */
    Customer: Customer,
    /**
     * The CustomerAddress model constructor.
     * @property {module:model/CustomerAddress}
     */
    CustomerAddress: CustomerAddress,
    /**
     * The CustomerRevenue model constructor.
     * @property {module:model/CustomerRevenue}
     */
    CustomerRevenue: CustomerRevenue,
    /**
     * The DailyDeposit model constructor.
     * @property {module:model/DailyDeposit}
     */
    DailyDeposit: DailyDeposit,
    /**
     * The DailyWithdrawal model constructor.
     * @property {module:model/DailyWithdrawal}
     */
    DailyWithdrawal: DailyWithdrawal,
    /**
     * The DateDoubleVO model constructor.
     * @property {module:model/DateDoubleVO}
     */
    DateDoubleVO: DateDoubleVO,
    /**
     * The DecisionTree model constructor.
     * @property {module:model/DecisionTree}
     */
    DecisionTree: DecisionTree,
    /**
     * The DecisionTreeCO model constructor.
     * @property {module:model/DecisionTreeCO}
     */
    DecisionTreeCO: DecisionTreeCO,
    /**
     * The DecisionTreeResultVO model constructor.
     * @property {module:model/DecisionTreeResultVO}
     */
    DecisionTreeResultVO: DecisionTreeResultVO,
    /**
     * The DepositAccountVO model constructor.
     * @property {module:model/DepositAccountVO}
     */
    DepositAccountVO: DepositAccountVO,
    /**
     * The DepositVO model constructor.
     * @property {module:model/DepositVO}
     */
    DepositVO: DepositVO,
    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document: Document,
    /**
     * The Employment model constructor.
     * @property {module:model/Employment}
     */
    Employment: Employment,
    /**
     * The ExternalAccountTransfer model constructor.
     * @property {module:model/ExternalAccountTransfer}
     */
    ExternalAccountTransfer: ExternalAccountTransfer,
    /**
     * The FAQKeyword model constructor.
     * @property {module:model/FAQKeyword}
     */
    FAQKeyword: FAQKeyword,
    /**
     * The Faq model constructor.
     * @property {module:model/Faq}
     */
    Faq: Faq,
    /**
     * The Feature model constructor.
     * @property {module:model/Feature}
     */
    Feature: Feature,
    /**
     * The FeatureTrack model constructor.
     * @property {module:model/FeatureTrack}
     */
    FeatureTrack: FeatureTrack,
    /**
     * The FinancialOffer model constructor.
     * @property {module:model/FinancialOffer}
     */
    FinancialOffer: FinancialOffer,
    /**
     * The Funding model constructor.
     * @property {module:model/Funding}
     */
    Funding: Funding,
    /**
     * The FundingRequestMap model constructor.
     * @property {module:model/FundingRequestMap}
     */
    FundingRequestMap: FundingRequestMap,
    /**
     * The Goal model constructor.
     * @property {module:model/Goal}
     */
    Goal: Goal,
    /**
     * The GoalAccountMapping model constructor.
     * @property {module:model/GoalAccountMapping}
     */
    GoalAccountMapping: GoalAccountMapping,
    /**
     * The GoalTrack model constructor.
     * @property {module:model/GoalTrack}
     */
    GoalTrack: GoalTrack,
    /**
     * The GoalTrackAccounts model constructor.
     * @property {module:model/GoalTrackAccounts}
     */
    GoalTrackAccounts: GoalTrackAccounts,
    /**
     * The InsuranceCoverage model constructor.
     * @property {module:model/InsuranceCoverage}
     */
    InsuranceCoverage: InsuranceCoverage,
    /**
     * The InsuranceCoverageMap model constructor.
     * @property {module:model/InsuranceCoverageMap}
     */
    InsuranceCoverageMap: InsuranceCoverageMap,
    /**
     * The InsuranceDiscount model constructor.
     * @property {module:model/InsuranceDiscount}
     */
    InsuranceDiscount: InsuranceDiscount,
    /**
     * The InsuranceDiscountMap model constructor.
     * @property {module:model/InsuranceDiscountMap}
     */
    InsuranceDiscountMap: InsuranceDiscountMap,
    /**
     * The InsuranceQuote model constructor.
     * @property {module:model/InsuranceQuote}
     */
    InsuranceQuote: InsuranceQuote,
    /**
     * The Investment model constructor.
     * @property {module:model/Investment}
     */
    Investment: Investment,
    /**
     * The Invoice model constructor.
     * @property {module:model/Invoice}
     */
    Invoice: Invoice,
    /**
     * The InvoicePayment model constructor.
     * @property {module:model/InvoicePayment}
     */
    InvoicePayment: InvoicePayment,
    /**
     * The JsonNode model constructor.
     * @property {module:model/JsonNode}
     */
    JsonNode: JsonNode,
    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location: Location,
    /**
     * The MerchantsMap model constructor.
     * @property {module:model/MerchantsMap}
     */
    MerchantsMap: MerchantsMap,
    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model: Model,
    /**
     * The ModelAssetSize model constructor.
     * @property {module:model/ModelAssetSize}
     */
    ModelAssetSize: ModelAssetSize,
    /**
     * The ModelComment model constructor.
     * @property {module:model/ModelComment}
     */
    ModelComment: ModelComment,
    /**
     * The ModelHolding model constructor.
     * @property {module:model/ModelHolding}
     */
    ModelHolding: ModelHolding,
    /**
     * The ModelHoldingAgg model constructor.
     * @property {module:model/ModelHoldingAgg}
     */
    ModelHoldingAgg: ModelHoldingAgg,
    /**
     * The ModelHoldingVO model constructor.
     * @property {module:model/ModelHoldingVO}
     */
    ModelHoldingVO: ModelHoldingVO,
    /**
     * The ModelTransaction model constructor.
     * @property {module:model/ModelTransaction}
     */
    ModelTransaction: ModelTransaction,
    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node: Node,
    /**
     * The NodeRelationship model constructor.
     * @property {module:model/NodeRelationship}
     */
    NodeRelationship: NodeRelationship,
    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification: Notification,
    /**
     * The NotificationClient model constructor.
     * @property {module:model/NotificationClient}
     */
    NotificationClient: NotificationClient,
    /**
     * The NotificationSetting model constructor.
     * @property {module:model/NotificationSetting}
     */
    NotificationSetting: NotificationSetting,
    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order: Order,
    /**
     * The OrderBulk model constructor.
     * @property {module:model/OrderBulk}
     */
    OrderBulk: OrderBulk,
    /**
     * The OrderReconcileRequest model constructor.
     * @property {module:model/OrderReconcileRequest}
     */
    OrderReconcileRequest: OrderReconcileRequest,
    /**
     * The OrderReconcileReturnObject model constructor.
     * @property {module:model/OrderReconcileReturnObject}
     */
    OrderReconcileReturnObject: OrderReconcileReturnObject,
    /**
     * The OrderStatus model constructor.
     * @property {module:model/OrderStatus}
     */
    OrderStatus: OrderStatus,
    /**
     * The OrderTrack model constructor.
     * @property {module:model/OrderTrack}
     */
    OrderTrack: OrderTrack,
    /**
     * The OrderVoClone model constructor.
     * @property {module:model/OrderVoClone}
     */
    OrderVoClone: OrderVoClone,
    /**
     * The Overflow model constructor.
     * @property {module:model/Overflow}
     */
    Overflow: Overflow,
    /**
     * The OverflowBankLinkMap model constructor.
     * @property {module:model/OverflowBankLinkMap}
     */
    OverflowBankLinkMap: OverflowBankLinkMap,
    /**
     * The OverflowSettings model constructor.
     * @property {module:model/OverflowSettings}
     */
    OverflowSettings: OverflowSettings,
    /**
     * The PageAccount model constructor.
     * @property {module:model/PageAccount}
     */
    PageAccount: PageAccount,
    /**
     * The PageAccountAllocationMapping model constructor.
     * @property {module:model/PageAccountAllocationMapping}
     */
    PageAccountAllocationMapping: PageAccountAllocationMapping,
    /**
     * The PageAccountPermissionVO model constructor.
     * @property {module:model/PageAccountPermissionVO}
     */
    PageAccountPermissionVO: PageAccountPermissionVO,
    /**
     * The PageAccountStatus model constructor.
     * @property {module:model/PageAccountStatus}
     */
    PageAccountStatus: PageAccountStatus,
    /**
     * The PageAccountType model constructor.
     * @property {module:model/PageAccountType}
     */
    PageAccountType: PageAccountType,
    /**
     * The PageAccounting model constructor.
     * @property {module:model/PageAccounting}
     */
    PageAccounting: PageAccounting,
    /**
     * The PageAggregationAccount model constructor.
     * @property {module:model/PageAggregationAccount}
     */
    PageAggregationAccount: PageAggregationAccount,
    /**
     * The PageAggregationAccountBalance model constructor.
     * @property {module:model/PageAggregationAccountBalance}
     */
    PageAggregationAccountBalance: PageAggregationAccountBalance,
    /**
     * The PageAggregationAccountHolding model constructor.
     * @property {module:model/PageAggregationAccountHolding}
     */
    PageAggregationAccountHolding: PageAggregationAccountHolding,
    /**
     * The PageAggregationAccountTransaction model constructor.
     * @property {module:model/PageAggregationAccountTransaction}
     */
    PageAggregationAccountTransaction: PageAggregationAccountTransaction,
    /**
     * The PageAllocation model constructor.
     * @property {module:model/PageAllocation}
     */
    PageAllocation: PageAllocation,
    /**
     * The PageAllocationComposition model constructor.
     * @property {module:model/PageAllocationComposition}
     */
    PageAllocationComposition: PageAllocationComposition,
    /**
     * The PageAnswer model constructor.
     * @property {module:model/PageAnswer}
     */
    PageAnswer: PageAnswer,
    /**
     * The PageApplication model constructor.
     * @property {module:model/PageApplication}
     */
    PageApplication: PageApplication,
    /**
     * The PageAuditLog model constructor.
     * @property {module:model/PageAuditLog}
     */
    PageAuditLog: PageAuditLog,
    /**
     * The PageBankLink model constructor.
     * @property {module:model/PageBankLink}
     */
    PageBankLink: PageBankLink,
    /**
     * The PageBenchmark model constructor.
     * @property {module:model/PageBenchmark}
     */
    PageBenchmark: PageBenchmark,
    /**
     * The PageBudget model constructor.
     * @property {module:model/PageBudget}
     */
    PageBudget: PageBudget,
    /**
     * The PageCampaign model constructor.
     * @property {module:model/PageCampaign}
     */
    PageCampaign: PageCampaign,
    /**
     * The PageCampaignData model constructor.
     * @property {module:model/PageCampaignData}
     */
    PageCampaignData: PageCampaignData,
    /**
     * The PageCampaignPlan model constructor.
     * @property {module:model/PageCampaignPlan}
     */
    PageCampaignPlan: PageCampaignPlan,
    /**
     * The PageCard model constructor.
     * @property {module:model/PageCard}
     */
    PageCard: PageCard,
    /**
     * The PageCardProgram model constructor.
     * @property {module:model/PageCardProgram}
     */
    PageCardProgram: PageCardProgram,
    /**
     * The PageChatInfo model constructor.
     * @property {module:model/PageChatInfo}
     */
    PageChatInfo: PageChatInfo,
    /**
     * The PageClient model constructor.
     * @property {module:model/PageClient}
     */
    PageClient: PageClient,
    /**
     * The PageClientCampaignMapping model constructor.
     * @property {module:model/PageClientCampaignMapping}
     */
    PageClientCampaignMapping: PageClientCampaignMapping,
    /**
     * The PageClientHydro model constructor.
     * @property {module:model/PageClientHydro}
     */
    PageClientHydro: PageClientHydro,
    /**
     * The PageClientResponse model constructor.
     * @property {module:model/PageClientResponse}
     */
    PageClientResponse: PageClientResponse,
    /**
     * The PageClientStatus model constructor.
     * @property {module:model/PageClientStatus}
     */
    PageClientStatus: PageClientStatus,
    /**
     * The PageConsultation model constructor.
     * @property {module:model/PageConsultation}
     */
    PageConsultation: PageConsultation,
    /**
     * The PageCustomer model constructor.
     * @property {module:model/PageCustomer}
     */
    PageCustomer: PageCustomer,
    /**
     * The PageCustomerRevenue model constructor.
     * @property {module:model/PageCustomerRevenue}
     */
    PageCustomerRevenue: PageCustomerRevenue,
    /**
     * The PageDailyDeposit model constructor.
     * @property {module:model/PageDailyDeposit}
     */
    PageDailyDeposit: PageDailyDeposit,
    /**
     * The PageDailyWithdrawal model constructor.
     * @property {module:model/PageDailyWithdrawal}
     */
    PageDailyWithdrawal: PageDailyWithdrawal,
    /**
     * The PageDecisionTree model constructor.
     * @property {module:model/PageDecisionTree}
     */
    PageDecisionTree: PageDecisionTree,
    /**
     * The PageDocument model constructor.
     * @property {module:model/PageDocument}
     */
    PageDocument: PageDocument,
    /**
     * The PageExternalAccountTransfer model constructor.
     * @property {module:model/PageExternalAccountTransfer}
     */
    PageExternalAccountTransfer: PageExternalAccountTransfer,
    /**
     * The PageFaq model constructor.
     * @property {module:model/PageFaq}
     */
    PageFaq: PageFaq,
    /**
     * The PageFeature model constructor.
     * @property {module:model/PageFeature}
     */
    PageFeature: PageFeature,
    /**
     * The PageFeatureTrack model constructor.
     * @property {module:model/PageFeatureTrack}
     */
    PageFeatureTrack: PageFeatureTrack,
    /**
     * The PageFinancialOffer model constructor.
     * @property {module:model/PageFinancialOffer}
     */
    PageFinancialOffer: PageFinancialOffer,
    /**
     * The PageFunding model constructor.
     * @property {module:model/PageFunding}
     */
    PageFunding: PageFunding,
    /**
     * The PageGoal model constructor.
     * @property {module:model/PageGoal}
     */
    PageGoal: PageGoal,
    /**
     * The PageGoalTrack model constructor.
     * @property {module:model/PageGoalTrack}
     */
    PageGoalTrack: PageGoalTrack,
    /**
     * The PageInsuranceCoverage model constructor.
     * @property {module:model/PageInsuranceCoverage}
     */
    PageInsuranceCoverage: PageInsuranceCoverage,
    /**
     * The PageInsuranceDiscount model constructor.
     * @property {module:model/PageInsuranceDiscount}
     */
    PageInsuranceDiscount: PageInsuranceDiscount,
    /**
     * The PageInsuranceQuote model constructor.
     * @property {module:model/PageInsuranceQuote}
     */
    PageInsuranceQuote: PageInsuranceQuote,
    /**
     * The PageInvoice model constructor.
     * @property {module:model/PageInvoice}
     */
    PageInvoice: PageInvoice,
    /**
     * The PageInvoicePayment model constructor.
     * @property {module:model/PageInvoicePayment}
     */
    PageInvoicePayment: PageInvoicePayment,
    /**
     * The PageModel model constructor.
     * @property {module:model/PageModel}
     */
    PageModel: PageModel,
    /**
     * The PageModelAssetSize model constructor.
     * @property {module:model/PageModelAssetSize}
     */
    PageModelAssetSize: PageModelAssetSize,
    /**
     * The PageModelComment model constructor.
     * @property {module:model/PageModelComment}
     */
    PageModelComment: PageModelComment,
    /**
     * The PageModelHolding model constructor.
     * @property {module:model/PageModelHolding}
     */
    PageModelHolding: PageModelHolding,
    /**
     * The PageModelTransaction model constructor.
     * @property {module:model/PageModelTransaction}
     */
    PageModelTransaction: PageModelTransaction,
    /**
     * The PageNode model constructor.
     * @property {module:model/PageNode}
     */
    PageNode: PageNode,
    /**
     * The PageNodeRelationship model constructor.
     * @property {module:model/PageNodeRelationship}
     */
    PageNodeRelationship: PageNodeRelationship,
    /**
     * The PageNotification model constructor.
     * @property {module:model/PageNotification}
     */
    PageNotification: PageNotification,
    /**
     * The PageNotificationClient model constructor.
     * @property {module:model/PageNotificationClient}
     */
    PageNotificationClient: PageNotificationClient,
    /**
     * The PageNotificationSetting model constructor.
     * @property {module:model/PageNotificationSetting}
     */
    PageNotificationSetting: PageNotificationSetting,
    /**
     * The PageOrder model constructor.
     * @property {module:model/PageOrder}
     */
    PageOrder: PageOrder,
    /**
     * The PageOrderBulk model constructor.
     * @property {module:model/PageOrderBulk}
     */
    PageOrderBulk: PageOrderBulk,
    /**
     * The PageOrderStatus model constructor.
     * @property {module:model/PageOrderStatus}
     */
    PageOrderStatus: PageOrderStatus,
    /**
     * The PageOrderTrack model constructor.
     * @property {module:model/PageOrderTrack}
     */
    PageOrderTrack: PageOrderTrack,
    /**
     * The PageOverflow model constructor.
     * @property {module:model/PageOverflow}
     */
    PageOverflow: PageOverflow,
    /**
     * The PageOverflowSettings model constructor.
     * @property {module:model/PageOverflowSettings}
     */
    PageOverflowSettings: PageOverflowSettings,
    /**
     * The PagePortfolio model constructor.
     * @property {module:model/PagePortfolio}
     */
    PagePortfolio: PagePortfolio,
    /**
     * The PagePortfolioAssetSizeLog model constructor.
     * @property {module:model/PagePortfolioAssetSizeLog}
     */
    PagePortfolioAssetSizeLog: PagePortfolioAssetSizeLog,
    /**
     * The PagePortfolioComment model constructor.
     * @property {module:model/PagePortfolioComment}
     */
    PagePortfolioComment: PagePortfolioComment,
    /**
     * The PagePortfolioGoal model constructor.
     * @property {module:model/PagePortfolioGoal}
     */
    PagePortfolioGoal: PagePortfolioGoal,
    /**
     * The PagePortfolioHoldingLog model constructor.
     * @property {module:model/PagePortfolioHoldingLog}
     */
    PagePortfolioHoldingLog: PagePortfolioHoldingLog,
    /**
     * The PagePortfolioTransaction model constructor.
     * @property {module:model/PagePortfolioTransaction}
     */
    PagePortfolioTransaction: PagePortfolioTransaction,
    /**
     * The PageQuestion model constructor.
     * @property {module:model/PageQuestion}
     */
    PageQuestion: PageQuestion,
    /**
     * The PageQuestionnaire model constructor.
     * @property {module:model/PageQuestionnaire}
     */
    PageQuestionnaire: PageQuestionnaire,
    /**
     * The PageRiskProfile model constructor.
     * @property {module:model/PageRiskProfile}
     */
    PageRiskProfile: PageRiskProfile,
    /**
     * The PageRoundup model constructor.
     * @property {module:model/PageRoundup}
     */
    PageRoundup: PageRoundup,
    /**
     * The PageRoundupSettings model constructor.
     * @property {module:model/PageRoundupSettings}
     */
    PageRoundupSettings: PageRoundupSettings,
    /**
     * The PageSale model constructor.
     * @property {module:model/PageSale}
     */
    PageSale: PageSale,
    /**
     * The PageScore model constructor.
     * @property {module:model/PageScore}
     */
    PageScore: PageScore,
    /**
     * The PageSecurity model constructor.
     * @property {module:model/PageSecurity}
     */
    PageSecurity: PageSecurity,
    /**
     * The PageSecurityExclusion model constructor.
     * @property {module:model/PageSecurityExclusion}
     */
    PageSecurityExclusion: PageSecurityExclusion,
    /**
     * The PageSecurityPrice model constructor.
     * @property {module:model/PageSecurityPrice}
     */
    PageSecurityPrice: PageSecurityPrice,
    /**
     * The PageStage model constructor.
     * @property {module:model/PageStage}
     */
    PageStage: PageStage,
    /**
     * The PageSupportTicket model constructor.
     * @property {module:model/PageSupportTicket}
     */
    PageSupportTicket: PageSupportTicket,
    /**
     * The PageSupportTicketComment model constructor.
     * @property {module:model/PageSupportTicketComment}
     */
    PageSupportTicketComment: PageSupportTicketComment,
    /**
     * The PageTransactionCode model constructor.
     * @property {module:model/PageTransactionCode}
     */
    PageTransactionCode: PageTransactionCode,
    /**
     * The PageVAccountAssetSize model constructor.
     * @property {module:model/PageVAccountAssetSize}
     */
    PageVAccountAssetSize: PageVAccountAssetSize,
    /**
     * The PageWebhook model constructor.
     * @property {module:model/PageWebhook}
     */
    PageWebhook: PageWebhook,
    /**
     * The PermissionVO model constructor.
     * @property {module:model/PermissionVO}
     */
    PermissionVO: PermissionVO,
    /**
     * The Portfolio model constructor.
     * @property {module:model/Portfolio}
     */
    Portfolio: Portfolio,
    /**
     * The PortfolioAggregatedVO model constructor.
     * @property {module:model/PortfolioAggregatedVO}
     */
    PortfolioAggregatedVO: PortfolioAggregatedVO,
    /**
     * The PortfolioAssetSize model constructor.
     * @property {module:model/PortfolioAssetSize}
     */
    PortfolioAssetSize: PortfolioAssetSize,
    /**
     * The PortfolioAssetSizeLog model constructor.
     * @property {module:model/PortfolioAssetSizeLog}
     */
    PortfolioAssetSizeLog: PortfolioAssetSizeLog,
    /**
     * The PortfolioComment model constructor.
     * @property {module:model/PortfolioComment}
     */
    PortfolioComment: PortfolioComment,
    /**
     * The PortfolioGoal model constructor.
     * @property {module:model/PortfolioGoal}
     */
    PortfolioGoal: PortfolioGoal,
    /**
     * The PortfolioGoalMap model constructor.
     * @property {module:model/PortfolioGoalMap}
     */
    PortfolioGoalMap: PortfolioGoalMap,
    /**
     * The PortfolioHolding model constructor.
     * @property {module:model/PortfolioHolding}
     */
    PortfolioHolding: PortfolioHolding,
    /**
     * The PortfolioHoldingAgg model constructor.
     * @property {module:model/PortfolioHoldingAgg}
     */
    PortfolioHoldingAgg: PortfolioHoldingAgg,
    /**
     * The PortfolioHoldingLog model constructor.
     * @property {module:model/PortfolioHoldingLog}
     */
    PortfolioHoldingLog: PortfolioHoldingLog,
    /**
     * The PortfolioTransaction model constructor.
     * @property {module:model/PortfolioTransaction}
     */
    PortfolioTransaction: PortfolioTransaction,
    /**
     * The Question model constructor.
     * @property {module:model/Question}
     */
    Question: Question,
    /**
     * The Questionnaire model constructor.
     * @property {module:model/Questionnaire}
     */
    Questionnaire: Questionnaire,
    /**
     * The RiskProfile model constructor.
     * @property {module:model/RiskProfile}
     */
    RiskProfile: RiskProfile,
    /**
     * The Roundup model constructor.
     * @property {module:model/Roundup}
     */
    Roundup: Roundup,
    /**
     * The RoundupCO model constructor.
     * @property {module:model/RoundupCO}
     */
    RoundupCO: RoundupCO,
    /**
     * The RoundupSettings model constructor.
     * @property {module:model/RoundupSettings}
     */
    RoundupSettings: RoundupSettings,
    /**
     * The Sale model constructor.
     * @property {module:model/Sale}
     */
    Sale: Sale,
    /**
     * The Score model constructor.
     * @property {module:model/Score}
     */
    Score: Score,
    /**
     * The SecuritiesComposition model constructor.
     * @property {module:model/SecuritiesComposition}
     */
    SecuritiesComposition: SecuritiesComposition,
    /**
     * The SecuritiesCountry model constructor.
     * @property {module:model/SecuritiesCountry}
     */
    SecuritiesCountry: SecuritiesCountry,
    /**
     * The Security model constructor.
     * @property {module:model/Security}
     */
    Security: Security,
    /**
     * The SecurityCompositionVO model constructor.
     * @property {module:model/SecurityCompositionVO}
     */
    SecurityCompositionVO: SecurityCompositionVO,
    /**
     * The SecurityCountryVO model constructor.
     * @property {module:model/SecurityCountryVO}
     */
    SecurityCountryVO: SecurityCountryVO,
    /**
     * The SecurityDetailVO model constructor.
     * @property {module:model/SecurityDetailVO}
     */
    SecurityDetailVO: SecurityDetailVO,
    /**
     * The SecurityExclusion model constructor.
     * @property {module:model/SecurityExclusion}
     */
    SecurityExclusion: SecurityExclusion,
    /**
     * The SecurityPrice model constructor.
     * @property {module:model/SecurityPrice}
     */
    SecurityPrice: SecurityPrice,
    /**
     * The Sort model constructor.
     * @property {module:model/Sort}
     */
    Sort: Sort,
    /**
     * The Stage model constructor.
     * @property {module:model/Stage}
     */
    Stage: Stage,
    /**
     * The State model constructor.
     * @property {module:model/State}
     */
    State: State,
    /**
     * The StatisticResourceVO model constructor.
     * @property {module:model/StatisticResourceVO}
     */
    StatisticResourceVO: StatisticResourceVO,
    /**
     * The SupportTicket model constructor.
     * @property {module:model/SupportTicket}
     */
    SupportTicket: SupportTicket,
    /**
     * The SupportTicketComment model constructor.
     * @property {module:model/SupportTicketComment}
     */
    SupportTicketComment: SupportTicketComment,
    /**
     * The SupportTicketDocument model constructor.
     * @property {module:model/SupportTicketDocument}
     */
    SupportTicketDocument: SupportTicketDocument,
    /**
     * The TokenDateRequest model constructor.
     * @property {module:model/TokenDateRequest}
     */
    TokenDateRequest: TokenDateRequest,
    /**
     * The TransactionCode model constructor.
     * @property {module:model/TransactionCode}
     */
    TransactionCode: TransactionCode,
    /**
     * The VAccountAssetSize model constructor.
     * @property {module:model/VAccountAssetSize}
     */
    VAccountAssetSize: VAccountAssetSize,
    /**
     * The VAccountVO model constructor.
     * @property {module:model/VAccountVO}
     */
    VAccountVO: VAccountVO,
    /**
     * The VClientGoalViewData model constructor.
     * @property {module:model/VClientGoalViewData}
     */
    VClientGoalViewData: VClientGoalViewData,
    /**
     * The VPortfolioVO model constructor.
     * @property {module:model/VPortfolioVO}
     */
    VPortfolioVO: VPortfolioVO,
    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook: Webhook,
    /**
     * The WithdrawalAccountVO model constructor.
     * @property {module:model/WithdrawalAccountVO}
     */
    WithdrawalAccountVO: WithdrawalAccountVO,
    /**
     * The WithdrawalVO model constructor.
     * @property {module:model/WithdrawalVO}
     */
    WithdrawalVO: WithdrawalVO,
    /**
     * The AccountApi service constructor.
     * @property {module:api/AccountApi}
     */
    AccountApi: AccountApi,
    /**
     * The AccountingApi service constructor.
     * @property {module:api/AccountingApi}
     */
    AccountingApi: AccountingApi,
    /**
     * The AggregationAccountApi service constructor.
     * @property {module:api/AggregationAccountApi}
     */
    AggregationAccountApi: AggregationAccountApi,
    /**
     * The AllocationApi service constructor.
     * @property {module:api/AllocationApi}
     */
    AllocationApi: AllocationApi,
    /**
     * The ApplicationApi service constructor.
     * @property {module:api/ApplicationApi}
     */
    ApplicationApi: ApplicationApi,
    /**
     * The AuditLogApi service constructor.
     * @property {module:api/AuditLogApi}
     */
    AuditLogApi: AuditLogApi,
    /**
     * The BenchmarkApi service constructor.
     * @property {module:api/BenchmarkApi}
     */
    BenchmarkApi: BenchmarkApi,
    /**
     * The BudgetApi service constructor.
     * @property {module:api/BudgetApi}
     */
    BudgetApi: BudgetApi,
    /**
     * The BulkApi service constructor.
     * @property {module:api/BulkApi}
     */
    BulkApi: BulkApi,
    /**
     * The CardApi service constructor.
     * @property {module:api/CardApi}
     */
    CardApi: CardApi,
    /**
     * The ClientApi service constructor.
     * @property {module:api/ClientApi}
     */
    ClientApi: ClientApi,
    /**
     * The CustomerApi service constructor.
     * @property {module:api/CustomerApi}
     */
    CustomerApi: CustomerApi,
    /**
     * The DecisionTreeApi service constructor.
     * @property {module:api/DecisionTreeApi}
     */
    DecisionTreeApi: DecisionTreeApi,
    /**
     * The DocumentApi service constructor.
     * @property {module:api/DocumentApi}
     */
    DocumentApi: DocumentApi,
    /**
     * The FAQApi service constructor.
     * @property {module:api/FAQApi}
     */
    FAQApi: FAQApi,
    /**
     * The FeatureApi service constructor.
     * @property {module:api/FeatureApi}
     */
    FeatureApi: FeatureApi,
    /**
     * The FinancialOfferApi service constructor.
     * @property {module:api/FinancialOfferApi}
     */
    FinancialOfferApi: FinancialOfferApi,
    /**
     * The FundingApi service constructor.
     * @property {module:api/FundingApi}
     */
    FundingApi: FundingApi,
    /**
     * The GoalApi service constructor.
     * @property {module:api/GoalApi}
     */
    GoalApi: GoalApi,
    /**
     * The InsuranceApi service constructor.
     * @property {module:api/InsuranceApi}
     */
    InsuranceApi: InsuranceApi,
    /**
     * The InvoiceApi service constructor.
     * @property {module:api/InvoiceApi}
     */
    InvoiceApi: InvoiceApi,
    /**
     * The MarketingApi service constructor.
     * @property {module:api/MarketingApi}
     */
    MarketingApi: MarketingApi,
    /**
     * The ModelApi service constructor.
     * @property {module:api/ModelApi}
     */
    ModelApi: ModelApi,
    /**
     * The NotificationApi service constructor.
     * @property {module:api/NotificationApi}
     */
    NotificationApi: NotificationApi,
    /**
     * The OrderApi service constructor.
     * @property {module:api/OrderApi}
     */
    OrderApi: OrderApi,
    /**
     * The OverflowApi service constructor.
     * @property {module:api/OverflowApi}
     */
    OverflowApi: OverflowApi,
    /**
     * The PerformanceApi service constructor.
     * @property {module:api/PerformanceApi}
     */
    PerformanceApi: PerformanceApi,
    /**
     * The PortfolioApi service constructor.
     * @property {module:api/PortfolioApi}
     */
    PortfolioApi: PortfolioApi,
    /**
     * The QuestionnaireApi service constructor.
     * @property {module:api/QuestionnaireApi}
     */
    QuestionnaireApi: QuestionnaireApi,
    /**
     * The ResourceApi service constructor.
     * @property {module:api/ResourceApi}
     */
    ResourceApi: ResourceApi,
    /**
     * The RiskProfileApi service constructor.
     * @property {module:api/RiskProfileApi}
     */
    RiskProfileApi: RiskProfileApi,
    /**
     * The RoundupApi service constructor.
     * @property {module:api/RoundupApi}
     */
    RoundupApi: RoundupApi,
    /**
     * The ScoreApi service constructor.
     * @property {module:api/ScoreApi}
     */
    ScoreApi: ScoreApi,
    /**
     * The SecuritiesApi service constructor.
     * @property {module:api/SecuritiesApi}
     */
    SecuritiesApi: SecuritiesApi,
    /**
     * The SupportApi service constructor.
     * @property {module:api/SupportApi}
     */
    SupportApi: SupportApi,
    /**
     * The UtilsApi service constructor.
     * @property {module:api/UtilsApi}
     */
    UtilsApi: UtilsApi,
    /**
     * The WebhookApi service constructor.
     * @property {module:api/WebhookApi}
     */
    WebhookApi: WebhookApi,

    AuthApi: AuthApi
  };

  return exports;
}));
